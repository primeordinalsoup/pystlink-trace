_pytrace() {
    local cur prev opts
    COMPREPLY=()

    # compose the list of valid syms in all elf file arguments so far
    unset syms
    for compw in "${COMP_WORDS[@]}" ; do
        if [[ (${compw} =~ .*elf) && (-r ${compw}) ]] ; then
           # compw is valid elf file so get its symbols
           # now to complete --sym later
           syms="${syms} $(nm -S ${compw} | awk '{if ($4) print $4;}')"
        fi
    done

    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    commands="target log"
    opts="--help --xtal --baud --isr --prof --elf{0..1} --addr{0..3} --sym{0..3} --size{0..3} --flags{0..3}"
    bauds="62500 125000 250000 500000 1000000 2000000"
    freqs="200 72"
    flags="d dp dwu"
    bool="0 1"

    if [[ ${cur} =~ ^-.* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    elif [[ (${prev} =~ --elf) || (${cur} =~ bld.*) ]]; then
        elves="$(find bld -iname *app*.elf)"
        COMPREPLY=( $(compgen -W "${elves}" -- ${cur}) )
    elif [[ ${prev} =~ --sym ]]; then
        COMPREPLY=( $(compgen -W "${syms}" -- ${cur}) )
    elif [[ ${prev} =~ --baud ]]; then
        COMPREPLY=( $(compgen -W "${bauds}" -- ${cur}) )
    elif [[ ${prev} =~ --xtal ]]; then
        COMPREPLY=( $(compgen -W "${freqs}" -- ${cur}) )
    elif [[ ${prev} =~ --flags ]]; then
        COMPREPLY=( $(compgen -W "${flags}" -- ${cur}) )
    elif [[ ${prev} =~ --isr ]]; then
        COMPREPLY=( $(compgen -W "${bool}" -- ${cur}) )
    elif [[ ${prev} =~ --prof ]]; then
        COMPREPLY=( $(compgen -W "${bool}" -- ${cur}) )
    else
        COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
    fi
}

# now the various ways we invoke pytrace
complete -F _pytrace pytrace
complete -F _pytrace python3 -u $(which pytrace)


# now some cheek; let bash completion script set some aliae;
alias pytrace='python3 -u $(which pytrace)'
alias ptd-remre='python3 -u $(which pytrace) --elf0 bld/arm-Debug-remre_eprax/remote/tgt/remre/busApp/busApp-REMRE.elf --elf1 bld/arm-Debug-remre_eprax/remote/tgt/remre/bootstrapper/remre/bootstrapper-REMRE.elf --xtal 200'
alias ptd-pmal='python3 -u $(which pytrace) --elf0 bld/arm-Debug-pmal_epra1/powermodule/tgt/pmal/bootstrapper/pmal/bootstrapper-PMAL.elf --elf1 bld/arm-Debug-pmal_epra1/powermodule/tgt/pmal/app/app-PMAL.elf'
